Index: app/src/main/java/at/ac/univie/se2ws2020team0310/sketch_app/view/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package at.ac.univie.se2ws2020team0310.sketch_app.view;\r\n\r\nimport android.app.AlertDialog;\r\nimport android.content.ContentValues;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.graphics.Bitmap;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.provider.MediaStore;\r\nimport android.view.Menu;\r\nimport android.view.MenuInflater;\r\nimport android.view.MenuItem;\r\nimport android.view.MotionEvent;\r\nimport android.view.View;\r\nimport android.view.inputmethod.InputMethodManager;\r\nimport android.widget.Button;\r\nimport android.widget.CompoundButton;\r\nimport android.widget.EditText;\r\nimport android.widget.RadioButton;\r\nimport android.widget.SeekBar;\r\nimport android.widget.Switch;\r\nimport android.widget.Toast;\r\nimport android.widget.ToggleButton;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.Toolbar;\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.databinding.DataBindingUtil;\r\n\r\nimport java.io.IOException;\r\nimport java.io.OutputStream;\r\nimport java.util.UUID;\r\n\r\nimport at.ac.univie.se2ws2020team0310.sketch_app.R;\r\nimport at.ac.univie.se2ws2020team0310.sketch_app.databinding.ActivityMainBinding;\r\nimport at.ac.univie.se2ws2020team0310.sketch_app.model.graphicalElements.EGraphicalElementType;\r\nimport at.ac.univie.se2ws2020team0310.sketch_app.model.graphicalElements.Text;\r\nimport at.ac.univie.se2ws2020team0310.sketch_app.viewmodel.MainViewModel;\r\nimport petrov.kristiyan.colorpicker.ColorPicker;\r\n\r\npublic class MainActivity extends AppCompatActivity {\r\n\r\n// Attributes\r\n\r\n    ActivityMainBinding binding;\r\n    private CanvasView canvasView;\r\n    private MainViewModel mainViewModel;\r\n    ToggleButton switchLayer1;\r\n    ToggleButton switchLayer2;\r\n    ToggleButton switchLayer3;\r\n    RadioButton layer1selector;\r\n    RadioButton layer2selector;\r\n    RadioButton layer3selector;\r\n\r\n// Methods\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        binding = DataBindingUtil.setContentView(this, R.layout.activity_main);\r\n        Toolbar toolbar = findViewById(R.id.toolbar);\r\n        setSupportActionBar(toolbar);\r\n        getSupportActionBar().setDisplayShowTitleEnabled(false);\r\n        SeekBar sizeSeekBar = findViewById(R.id.sizeSeekBar);\r\n        SeekBar strokeWidthSeekBar = findViewById(R.id.strokeWidthSeekBar);\r\n        canvasView = findViewById(R.id.canvasView);\r\n        mainViewModel = new MainViewModel();\r\n        switchLayer1=(ToggleButton)findViewById(R.id.switchLayer1);\r\n        switchLayer2=(ToggleButton)findViewById(R.id.switchLayer2);\r\n        switchLayer3=(ToggleButton)findViewById(R.id.switchLayer3);\r\n        layer1selector=(RadioButton)findViewById(R.id.layer1selector);\r\n        layer2selector=(RadioButton)findViewById(R.id.layer2selector);\r\n        layer3selector=(RadioButton)findViewById(R.id.layer3selector);\r\n\r\n        // Defining the logic on when the SeekBars/ColorPicker should be displayed\r\n        SetStrokeWidthSeekBarBehavior();\r\n        SetSizeSeekBarBehavior();\r\n        SetColorPickerBehavior();\r\n        SetLayerSelectionVisibility();\r\n\r\n        // Set the SeekBarChangeListeners\r\n        sizeSeekBar.setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() {\r\n\r\n            public void onProgressChanged(SeekBar sizeSeekBar, int progress, boolean fromUser) {\r\n                mainViewModel.setSelectedSize(progress);\r\n                canvasView.changeElementSize(progress);\r\n            }\r\n\r\n            public void onStartTrackingTouch(SeekBar sizeSeekBar) {\r\n                // TODO Auto-generated method stub\r\n            }\r\n\r\n            public void onStopTrackingTouch(SeekBar sizeSeekBar) {\r\n            }\r\n        });\r\n\r\n        strokeWidthSeekBar.setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() {\r\n\r\n            public void onProgressChanged(SeekBar strokeWidthSeekBar, int progress, boolean fromUser) {\r\n                mainViewModel.setSelectedStrokeWidth(progress);\r\n                canvasView.changeElementStrokeWidth(progress);\r\n            }\r\n\r\n            public void onStartTrackingTouch(SeekBar strokeWidthSeekBar) {\r\n                // TODO Auto-generated method stub\r\n            }\r\n\r\n            public void onStopTrackingTouch(SeekBar strokeWidthSeekBar) {\r\n            }\r\n        });\r\n\r\n        switchLayer1.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {\r\n            @Override\r\n            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {\r\n                Toast layer0visibility;\r\n                if (isChecked) {\r\n                    mainViewModel.setLayerVisibility(0,true);\r\n                    layer0visibility = Toast.makeText(getApplicationContext(), \"Layer 0 visible\", Toast.LENGTH_LONG);\r\n                } else {\r\n                    mainViewModel.setLayerVisibility(0, false);\r\n                    layer0visibility = Toast.makeText(getApplicationContext(), \"Layer 0 invisible\", Toast.LENGTH_LONG);\r\n                }\r\n                layer0visibility.show();\r\n                refreshScreen();\r\n            }\r\n        });\r\n\r\n        switchLayer2.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {\r\n            @Override\r\n            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {\r\n                Toast layer1visibility;\r\n                if (isChecked) {\r\n                    mainViewModel.setLayerVisibility(1,true);\r\n                    layer1visibility = Toast.makeText(getApplicationContext(), \"Layer 1 visible\", Toast.LENGTH_LONG);\r\n                } else {\r\n                    mainViewModel.setLayerVisibility(1, false);\r\n                    layer1visibility = Toast.makeText(getApplicationContext(), \"Layer 1 invisible\", Toast.LENGTH_LONG);\r\n                }\r\n                layer1visibility.show();\r\n                refreshScreen();\r\n            }\r\n        });\r\n\r\n        switchLayer3.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {\r\n            @Override\r\n            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {\r\n                Toast layer2visibility;\r\n                if (isChecked) {\r\n                    mainViewModel.setLayerVisibility(2,true);\r\n                    layer2visibility = Toast.makeText(getApplicationContext(), \"Layer 1 visible\", Toast.LENGTH_LONG);\r\n                } else {\r\n                    mainViewModel.setLayerVisibility(2, false);\r\n                    layer2visibility = Toast.makeText(getApplicationContext(), \"Layer 1 invisible\", Toast.LENGTH_LONG);\r\n                }\r\n                layer2visibility.show();\r\n                refreshScreen();\r\n            }\r\n        });\r\n    }\r\n\r\n    public void onRadioButtonClicked(View view) {\r\n        boolean checked = ((RadioButton) view).isChecked();\r\n\r\n        switch(view.getId()) {\r\n            case R.id.layer1selector:\r\n                if (checked)\r\n                    mainViewModel.selectLayer(0);\r\n                    Toast layer0 = Toast.makeText(getApplicationContext(), \"Layer 0 selected\", Toast.LENGTH_LONG);\r\n                    layer0.show();\r\n                    break;\r\n            case R.id.layer2selector:\r\n                if (checked)\r\n                    mainViewModel.selectLayer(1);\r\n                    Toast layer1 = Toast.makeText(getApplicationContext(), \"Layer 1 selected\", Toast.LENGTH_LONG);\r\n                    layer1.show();\r\n                    break;\r\n            case R.id.layer3selector:\r\n                if(checked)\r\n                    mainViewModel.selectLayer(2);\r\n                    Toast layer2 = Toast.makeText(getApplicationContext(), \"Layer 2 selected\", Toast.LENGTH_LONG);\r\n                    layer2.show();\r\n                break;\r\n        }\r\n    }\r\n\r\n    public void SetLayerSelectionVisibility() {\r\n        ToggleButton switchLayer1 = findViewById(R.id.switchLayer1);\r\n        ToggleButton switchLayer2 = findViewById(R.id.switchLayer2);\r\n        ToggleButton switchLayer3 = findViewById(R.id.switchLayer3);\r\n        RadioButton layer1selector = findViewById(R.id.layer1selector);\r\n        RadioButton layer2selector = findViewById(R.id.layer2selector);\r\n        RadioButton layer3selector = findViewById(R.id.layer3selector);\r\n\r\n        findViewById(R.id.layerswitchbutton).setOnClickListener(v -> {\r\n            if(switchLayer1.getVisibility() == Switch.VISIBLE) {\r\n                switchLayer1.setVisibility(Switch.INVISIBLE);\r\n                switchLayer2.setVisibility(Switch.INVISIBLE);\r\n                switchLayer3.setVisibility(Switch.INVISIBLE);\r\n                layer1selector.setVisibility(RadioButton.INVISIBLE);\r\n                layer2selector.setVisibility(RadioButton.INVISIBLE);\r\n                layer3selector.setVisibility(RadioButton.INVISIBLE);\r\n            } else {\r\n                switchLayer1.setVisibility(Switch.VISIBLE);\r\n                switchLayer2.setVisibility(Switch.VISIBLE);\r\n                switchLayer3.setVisibility(Switch.VISIBLE);\r\n                layer1selector.setVisibility(RadioButton.VISIBLE);\r\n                layer2selector.setVisibility(RadioButton.VISIBLE);\r\n                layer3selector.setVisibility(RadioButton.VISIBLE);\r\n            }\r\n        });\r\n    }\r\n\r\n    public void SetSizeSeekBarBehavior() {\r\n        SeekBar sizeSeekBar = findViewById(R.id.sizeSeekBar);\r\n\r\n        findViewById(R.id.sizeButton).setOnClickListener(v -> {\r\n            if (sizeSeekBar.getVisibility() == SeekBar.VISIBLE) {\r\n                sizeSeekBar.setVisibility(SeekBar.INVISIBLE);\r\n            } else {\r\n                if (mainViewModel.layerIsEmpty()) {\r\n                    Toast error = Toast.makeText(getApplicationContext(), \"No graphical element selected\", Toast.LENGTH_LONG);\r\n                    error.show();\r\n                }\r\n                if (!mainViewModel.layerIsEmpty()) {\r\n                    sizeSeekBar.setVisibility(SeekBar.VISIBLE);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public void SetStrokeWidthSeekBarBehavior(){\r\n        SeekBar strokeWidthSeekBar = findViewById(R.id.strokeWidthSeekBar);\r\n\r\n        findViewById(R.id.strokeWidthButton).setOnClickListener(v -> {\r\n            if(strokeWidthSeekBar.getVisibility()==SeekBar.VISIBLE){\r\n                strokeWidthSeekBar.setVisibility(SeekBar.INVISIBLE);\r\n            }else{\r\n                if (mainViewModel.layerIsEmpty()) {\r\n                    Toast error = Toast.makeText(getApplicationContext(), \"No graphical element selected\", Toast.LENGTH_LONG);\r\n                    error.show();\r\n                }\r\n                if (!mainViewModel.layerIsEmpty()) {\r\n                    strokeWidthSeekBar.setVisibility(SeekBar.VISIBLE);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public void SetColorPickerBehavior(){\r\n        findViewById(R.id.colorSelectorButton).setOnClickListener(v -> {\r\n            if (mainViewModel.layerIsEmpty()) {\r\n                Toast error = Toast.makeText(getApplicationContext(), \"No graphical element selected\", Toast.LENGTH_LONG);\r\n                error.show();\r\n            } else {\r\n                ColorPicker colorPicker = new ColorPicker(MainActivity.this);\r\n                colorPicker.show();\r\n                colorPicker.setOnChooseColorListener(new ColorPicker.OnChooseColorListener() {\r\n                    @Override\r\n                    public void onChooseColor(int position, int color) {\r\n                        mainViewModel.setSelectedColor(color);\r\n                        canvasView.changeElementColor(color); //TODO: in ViewModel: Der Regler soll machen: onChange notify. Wir brauchen einen Observer, der den Wert dieses Reglers abgreift\r\n                    }\r\n\r\n                    @Override\r\n                    public void onCancel() {\r\n                        // put code\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    public boolean onCreateOptionsMenu(Menu menu) {\r\n        menu.clear();\r\n        MenuInflater inflater = getMenuInflater();\r\n        inflater.inflate(R.menu.menu,menu);\r\n        return true;\r\n    }\r\n\r\n    //The implementation of the load, save and export-functions will be included for DEAD.\r\n    @Override\r\n    public boolean onOptionsItemSelected(@NonNull MenuItem item) {\r\n\r\n        //TODO:Edit Mode implementation!\r\n        switch (item.getItemId()) {\r\n\r\n            case R.id.textId:\r\n                showTextEntryField();\r\n                showTextStyleButtons();\r\n\r\n                mainViewModel.selectGraphicalElement(EGraphicalElementType.TEXT_FIELD);\r\n                showToast(\"Text selected\");\r\n                return true;\r\n\r\n            case R.id.fingerId:\r\n                mainViewModel.selectGraphicalElement(EGraphicalElementType.FREEHAND);\r\n                showToast(\"Freehand drawing selected\");\r\n                return true;\r\n\r\n            case R.id.saveId:\r\n\r\n            case R.id.loadId:\r\n\r\n            case R.id.exportId:\r\n\r\n                AlertDialog.Builder saveDialog = new AlertDialog.Builder(this);\r\n                saveDialog.setTitle(\"Save drawing\");\r\n                saveDialog.setMessage(\"Save drawing to device Gallery?\");\r\n                saveDialog.setPositiveButton(\"Yes\", new DialogInterface.OnClickListener(){\r\n                    public void onClick(DialogInterface dialog, int which){\r\n                        //save drawing\r\n                    }\r\n                });\r\n                saveDialog.setNegativeButton(\"Cancel\", new DialogInterface.OnClickListener(){\r\n                    public void onClick(DialogInterface dialog, int which){\r\n                        dialog.cancel();\r\n                    }\r\n                });\r\n                saveDialog.show();\r\n\r\n        canvasView.setBackgroundColor(ContextCompat.getColor(this, R.color.white));\r\n        canvasView.setDrawingCacheEnabled(true);\r\n\r\n        String imgSaved = MediaStore.Images.Media.insertImage(\r\n                getContentResolver(), canvasView.getDrawingCache(),\r\n                UUID.randomUUID().toString() + \".png\", \"drawing\");\r\n\r\n        if (imgSaved != null) {\r\n            Toast savedToast = Toast.makeText(getApplicationContext(),\r\n                    \"Drawing saved to Gallery!\", Toast.LENGTH_SHORT);\r\n            savedToast.show();\r\n        } else {\r\n            Toast unsavedToast = Toast.makeText(getApplicationContext(),\r\n                    \"Oops! Image could not be saved.\", Toast.LENGTH_SHORT);\r\n            unsavedToast.show();\r\n            canvasView.saveToInternalStorage();\r\n            getContentResolver();\r\n            return true;\r\n        }\r\n\r\n            case R.id.lineId:\r\n                mainViewModel.selectGraphicalElement(EGraphicalElementType.LINE);\r\n                showToast(\"Line selected\");\r\n                return true;\r\n\r\n            case R.id.circleId:\r\n                mainViewModel.selectGraphicalElement(EGraphicalElementType.CIRCLE);\r\n                showToast(\"Circle selected\");\r\n                return true;\r\n\r\n            case R.id.squareId:\r\n                mainViewModel.selectGraphicalElement(EGraphicalElementType.QUADRANGLE);\r\n               showToast(\"Quadrangle selected\");\r\n                return true;\r\n\r\n            case R.id.triangleId:\r\n                mainViewModel.selectGraphicalElement(EGraphicalElementType.TRIANGLE);\r\n                showToast(\"Triangle selected\");\r\n                return true;\r\n\r\n            case R.id.deleteId:\r\n                canvasView.deleteElement();\r\n                return true;\r\n\r\n            case R.id.clearId:\r\n                canvasView.clear();\r\n                return true;\r\n\r\n            case R.id.editModeId:\r\n                mainViewModel.toggleEditMode();\r\n                showToast(\"Edit mode: \" + (mainViewModel.isEditModeOn() ? \"ON\" : \"OFF\"));\r\n                return true;\r\n\r\n            default:\r\n                return super.onOptionsItemSelected(item);\r\n        }\r\n    }\r\n\r\n    // TODO: Funktionalität in Methode im ViewModel auslagern (ab hier bis unten)\r\n    public void onClickDoneButton(View view) {\r\n\r\n        mainViewModel.selectGraphicalElement(EGraphicalElementType.TEXT_FIELD);\r\n        Text mText = (Text) canvasView.getCanvasViewModel().getSelectedGraphicalElement();\r\n        mText.setUserText(getEnteredText());\r\n\r\n        refreshScreen();\r\n\r\n        hideTextEntryField();\r\n        hideTextStyleButtons();\r\n    }\r\n\r\n    public String getEnteredText(){\r\n        EditText editText = findViewById(R.id.editText);\r\n        return editText.getText().toString();\r\n    }\r\n\r\n    public void showTextEntryField(){\r\n        EditText editText = findViewById(R.id.editText);\r\n        Button toggleText = findViewById(R.id.toggleText);\r\n\r\n        editText.setVisibility(View.VISIBLE);\r\n        toggleText.setVisibility(View.VISIBLE);\r\n    }\r\n\r\n    public void hideTextEntryField() {\r\n        EditText editText = findViewById(R.id.editText);\r\n        Button toggleText = findViewById(R.id.toggleText);\r\n\r\n        editText.setVisibility(View.GONE);\r\n        toggleText.setVisibility(View.GONE);\r\n    }\r\n\r\n    public void showTextStyleButtons(){\r\n        Button underlineText = findViewById(R.id.underlineButton);\r\n        Button boldText = findViewById(R.id.boldButton);\r\n        Button italicText = findViewById(R.id.italicButton);\r\n\r\n        underlineText.setVisibility(View.VISIBLE);\r\n        boldText.setVisibility(View.VISIBLE);\r\n        italicText.setVisibility(View.VISIBLE);\r\n    }\r\n\r\n    public void hideTextStyleButtons() {\r\n        Button underlineText = findViewById(R.id.underlineButton);\r\n        Button boldText = findViewById(R.id.boldButton);\r\n        Button italicText = findViewById(R.id.italicButton);\r\n\r\n        underlineText.setVisibility(View.GONE);\r\n        boldText.setVisibility(View.GONE);\r\n        italicText.setVisibility(View.GONE);\r\n    }\r\n\r\n    public void onClickStyleButtons(View view) {\r\n        mainViewModel.buttonClick();\r\n    }\r\n\r\n\r\n    // Hide the Soft Keyboard\r\n    // solution from: https://stackoverflow.com/questions/4165414/how-to-hide-soft-keyboard-on-android-after-clicking-outside-edittext\r\n    @Override\r\n    public boolean dispatchTouchEvent(MotionEvent ev) {\r\n        if (getCurrentFocus() != null) {\r\n            InputMethodManager imm = (InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);\r\n            imm.hideSoftInputFromWindow(getCurrentFocus().getWindowToken(), 0);\r\n        }\r\n        return super.dispatchTouchEvent(ev);\r\n    }\r\n\r\n    public void showToast(String text){\r\n        Toast textToast = Toast.makeText(getApplicationContext(), text, Toast.LENGTH_LONG);\r\n        textToast.show();\r\n    }\r\n\r\n    public void refreshScreen() {\r\n        canvasView.invalidate();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/at/ac/univie/se2ws2020team0310/sketch_app/view/MainActivity.java	(revision 672a4974ca70ebf45c0fe403e55d6bd316209263)
+++ app/src/main/java/at/ac/univie/se2ws2020team0310/sketch_app/view/MainActivity.java	(date 1609869612920)
@@ -304,6 +304,8 @@
             case R.id.loadId:
 
             case R.id.exportId:
+                canvasView.saveToInternalStorage();
+                return true;
 
                 AlertDialog.Builder saveDialog = new AlertDialog.Builder(this);
                 saveDialog.setTitle("Save drawing");
Index: app/src/main/java/at/ac/univie/se2ws2020team0310/sketch_app/model/graphicalElements/GraphicalElement.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package at.ac.univie.se2ws2020team0310.sketch_app.model.graphicalElements;\r\n\r\nimport android.graphics.Canvas;\r\nimport android.graphics.Paint;\r\nimport android.graphics.Path;\r\n\r\n\r\nimport at.ac.univie.se2ws2020team0310.sketch_app.model.draw.DrawStrategy;\r\n\r\npublic abstract class GraphicalElement {\r\n\r\n// Attributes\r\n\r\n    private final DrawStrategy drawStrategy;\r\n\r\n    protected float xPosition, yPosition, size;\r\n\r\n    protected Paint objectPaint;\r\n\r\n// Constructor\r\n\r\n    public GraphicalElement(DrawStrategy drawStrategy) { //Konstruktor\r\n        this.drawStrategy = drawStrategy;\r\n    }\r\n\r\n// Getters and Setters\r\n\r\n    public void setCoordinates(float x, float y) {\r\n        this.xPosition = x;\r\n        this.yPosition = y;\r\n    }\r\n\r\n    public float getxPosition() {\r\n        return xPosition;\r\n    }\r\n\r\n    public void setxPosition(float xPosition) {\r\n        this.xPosition = xPosition;\r\n    }\r\n\r\n    public float getyPosition() {\r\n        return yPosition;\r\n    }\r\n\r\n    public void setyPosition(float yPosition) {\r\n        this.yPosition = yPosition;\r\n    }\r\n\r\n    public float getSize() {\r\n        return size;\r\n    }\r\n\r\n    public void setSize(float size) {\r\n        this.size = size;\r\n    }\r\n\r\n    public Paint getObjectPaint() {\r\n        return objectPaint;\r\n    }\r\n\r\n    public void setObjectPaint(Paint objectPaint) {\r\n        this.objectPaint = objectPaint;\r\n    }\r\n\r\n    public void draw(Canvas canvas) {\r\n        drawStrategy.draw(canvas, this);\r\n    }\r\n\r\n\r\n    //method for freehand\r\n    public Path getPath() {\r\n        return null;\r\n    }\r\n\r\n    // check if this element is a Freehand drawing\r\n    public boolean isFreehand() {\r\n        return false;\r\n    }\r\n\r\n// Other Methods\r\n\r\n    // change coordinates and update Path, if applicable\r\n    public void changeCoordinates(float x, float y, float lastTouchX, float lastTouchY) {\r\n        this.setCoordinates(x, y);\r\n        if (getPath() != null && lastTouchX > 0 && lastTouchY > 0) {\r\n            getPath().offset(x - lastTouchX, y - lastTouchY);\r\n        }\r\n    }\r\n\r\n    public void setColor(int color) {\r\n        getObjectPaint().setColor(color);\r\n    }\r\n\r\n    public void setStrokeWidth(float strokeWidth) {\r\n        getObjectPaint().setStrokeWidth(strokeWidth);\r\n    }\r\n\r\n    public abstract boolean isWithinElement(float x, float y);\r\n    protected abstract String getName();\r\n\r\n    // toString() used for logging and identifying GraphicalElements\r\n    @Override\r\n    public String toString() {\r\n        return getName() + \" (\" + this.xPosition + \", \" + this.yPosition + \")\";\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/at/ac/univie/se2ws2020team0310/sketch_app/model/graphicalElements/GraphicalElement.java	(revision 672a4974ca70ebf45c0fe403e55d6bd316209263)
+++ app/src/main/java/at/ac/univie/se2ws2020team0310/sketch_app/model/graphicalElements/GraphicalElement.java	(date 1609869654010)
@@ -80,6 +80,7 @@
 // Other Methods
 
     // change coordinates and update Path, if applicable
+    // TODO: Sollte das nicht eher in die Klasse Freehand?
     public void changeCoordinates(float x, float y, float lastTouchX, float lastTouchY) {
         this.setCoordinates(x, y);
         if (getPath() != null && lastTouchX > 0 && lastTouchY > 0) {
Index: .idea/shelf/Uncommitted_changes_before_Merge_at_29_12_2020_11_27_[Default_Changelist]/shelved.patch
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Merge_at_29_12_2020_11_27_[Default_Changelist]/shelved.patch	(revision 672a4974ca70ebf45c0fe403e55d6bd316209263)
+++ .idea/shelf/Uncommitted_changes_before_Merge_at_29_12_2020_11_27_[Default_Changelist]/shelved.patch	(revision 672a4974ca70ebf45c0fe403e55d6bd316209263)
@@ -1,43 +0,0 @@
-Index: app/src/main/java/at/ac/univie/se2ws2020team0310/sketch_app/model/graphicalElements/Line.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package at.ac.univie.se2ws2020team0310.sketch_app.model.graphicalElements;\r\n\r\nimport at.ac.univie.se2ws2020team0310.sketch_app.model.draw.DrawStrategy;\r\n\r\npublic class Line extends GraphicalElement {\r\n\r\n// Attributes\r\n    private float startX, startY;\r\n\r\n    public Line(DrawStrategy drawStrategy) {\r\n        super(drawStrategy);\r\n    }\r\n\r\n// Getters and Setters\r\n    public float getStartX() {\r\n        return startX;\r\n    }\r\n\r\n    public float getStartY() {\r\n        return startY;\r\n    }\r\n\r\n    public void setStartCoordinates(float x, float y) {\r\n        this.startX = x;\r\n        this.startY = y;\r\n    }\r\n// Polymorphism with setter of Superclass\r\n    // if the startpoint is not defined, set position as startpoint\r\n    // else set position as endpoint\r\n    @Override\r\n    public void setCoordinates(float x, float y) {\r\n        if (getStartX() == 0 & getStartY() == 0) {\r\n            setStartCoordinates(x, y);\r\n        } else {\r\n            super.setCoordinates(x, y);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void changeCoordinates(float x, float y) {\r\n\r\n    }\r\n\r\n    public boolean isWithinElement(float x, float y) {\r\n        // TODO: implement method body\r\n        return false;\r\n    }\r\n\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/at/ac/univie/se2ws2020team0310/sketch_app/model/graphicalElements/Line.java	(revision 0eba6a3871a947084d7ee5f8bdc1c95e1ceb11a6)
-+++ app/src/main/java/at/ac/univie/se2ws2020team0310/sketch_app/model/graphicalElements/Line.java	(date 1609237653085)
-@@ -42,6 +42,7 @@
-     }
- 
-     public boolean isWithinElement(float x, float y) {
-+
-         // TODO: implement method body
-         return false;
-     }
-Index: app/src/main/java/at/ac/univie/se2ws2020team0310/sketch_app/model/Sketch.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package at.ac.univie.se2ws2020team0310.sketch_app.model;\r\n\r\nimport android.util.Log;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\nimport at.ac.univie.se2ws2020team0310.sketch_app.model.graphicalElements.EGraphicalElementType;\r\nimport at.ac.univie.se2ws2020team0310.sketch_app.model.graphicalElements.GraphicalElement;\r\n\r\npublic class Sketch {\r\n\r\n// Attributes\r\n\r\n    private static final Sketch sketch = new Sketch();\r\n    private final Layer[] layers;\r\n    private Layer selectedLayer;\r\n\r\n    private GraphicalElement selectedGraphicalElement;\r\n\r\n// Constructor\r\n\r\n    private Sketch() {\r\n        this.layers = new Layer[3];\r\n        for (int i = 0; i < 3; i++) {\r\n            layers[i] = new Layer();\r\n        }\r\n        this.selectedLayer = layers[0];\r\n    }\r\n\r\n// Getters and Setters\r\n\r\n    public static Sketch getSketch() {\r\n        return sketch;\r\n    }\r\n\r\n    public Layer getSelectedLayer() {\r\n        return this.selectedLayer;\r\n    }\r\n\r\n    public void setSelectedLayer(int layerNumber) {\r\n        try {\r\n            this.selectedLayer = layers[layerNumber];\r\n        }\r\n        catch (ArrayIndexOutOfBoundsException e) {\r\n            Log.e(\"Sketch\", e.getMessage());\r\n        }\r\n    }\r\n\r\n    public GraphicalElement getSelectedGraphicalElement() {\r\n        return selectedGraphicalElement;\r\n    }\r\n\r\n    public void setSelectedGraphicalElement(GraphicalElement selectedGraphicalElement) {\r\n        this.selectedGraphicalElement = selectedGraphicalElement;\r\n    }\r\n\r\n    public List<GraphicalElement> getDrawnElements() {\r\n        List<GraphicalElement> visibleElements = new ArrayList<>();\r\n        for (Layer layer : layers) {\r\n            if (layer.isVisible()) {\r\n                visibleElements.addAll(layer.getDrawnElements());\r\n            }\r\n        }\r\n        return  visibleElements;\r\n    }\r\n\r\n// Other Methods\r\n\r\n    public boolean layerIsEmpty() {\r\n        return selectedLayer.isEmpty();\r\n    }\r\n\r\n    public void storeElement() {\r\n        this.getSelectedLayer().storeElement(this.getSelectedGraphicalElement());\r\n    }\r\n\r\n    public void changeColor(int color) {\r\n        this.getSelectedLayer().changeColor(color);\r\n    }\r\n\r\n    public void changeStrokeWidth(float strokewidth) {\r\n        this.getSelectedLayer().changeStrokeWidth(strokewidth);\r\n    }\r\n\r\n    public void changeSize(int size) {\r\n        this.getSelectedLayer().changeSize(size);\r\n    }\r\n\r\n    public void setCoordinates(float x, float y) {\r\n        this.getSelectedLayer().setCoordinates(x, y);\r\n    }\r\n\r\n    public void changeCoordinates(float x, float y) {\r\n        this.getSelectedLayer().changeCoordinates(x, y);\r\n    }\r\n\r\n    public void deleteElement() {\r\n        selectedLayer.deleteLastElement();\r\n    }\r\n\r\n    public void clear() {\r\n        for (Layer layer : layers) {\r\n            layer.clear();\r\n        }\r\n    }\r\n\r\n    public void selectLine(int color, float size, float strokewidth) {\r\n\r\n        try {\r\n            this.setSelectedGraphicalElement(GraphicalElementFactory.createElement(EGraphicalElementType.LINE, color, size, strokewidth));\r\n        } catch (AppException e) {\r\n            Log.e(\"CanvasView\", e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    public void selectCircle(int color, float size, float strokewidth) {\r\n        try {\r\n            this.setSelectedGraphicalElement(GraphicalElementFactory.createElement(EGraphicalElementType.CIRCLE, color, size, strokewidth));\r\n        } catch (Exception e) {\r\n            Log.e(\"CanvasView\", e.getMessage());\r\n        }\r\n    }\r\n\r\n    public void selectQuadrangle(int color, float size, float strokewidth) {\r\n\r\n        // use a Factory to create the Quadrangle as a GraphicalElement\r\n        try {\r\n            this.setSelectedGraphicalElement(GraphicalElementFactory.createElement(EGraphicalElementType.QUADRANGLE, color, size, strokewidth));\r\n        } catch (AppException e) {\r\n            Log.e(\"CanvasView\", e.getMessage());\r\n        }\r\n    }\r\n\r\n    public void selectTriangle(int color, float size, float strokewidth) {\r\n\r\n        try {\r\n            this.setSelectedGraphicalElement(GraphicalElementFactory.createElement(EGraphicalElementType.TRIANGLE, color, size, strokewidth));\r\n        } catch (AppException e) {\r\n            Log.e(\"CanvasView\", e.getMessage());\r\n        }\r\n\r\n    }\r\n\r\n    public void selectText(int color, float size, float strokewidth) {\r\n\r\n        try {\r\n            this.setSelectedGraphicalElement(GraphicalElementFactory.createElement(EGraphicalElementType.TEXT_FIELD, color, size, strokewidth));\r\n        } catch (AppException e) {\r\n            Log.e(\"CanvasView\", e.getMessage());\r\n        }\r\n    }\r\n\r\n    public void resetSelection() {\r\n        this.setSelectedGraphicalElement(null);\r\n    }\r\n\r\n    /**\r\n     * Checks, whether the provided coordinates are within a graphical element of the selected layer and if so, makes that element editable.\r\n     *\r\n     * @param x value on the x-axes\r\n     * @param y value on the y-axes\r\n     * @return returns true if the provided coordinates are within an element\r\n     */\r\n    public boolean isWithinElement(float x, float y) {\r\n        // TODO: We need a better name, as this method not only checks, whether a touch falls within an element, but also sets the found element \"editable\"\r\n        for (GraphicalElement graphicalElement : selectedLayer.getDrawnElements()) {\r\n               if (graphicalElement.isWithinElement(x, y)) {\r\n                    selectedLayer.editElement(graphicalElement);\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n    }\r\n\r\n\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/at/ac/univie/se2ws2020team0310/sketch_app/model/Sketch.java	(revision 0eba6a3871a947084d7ee5f8bdc1c95e1ceb11a6)
-+++ app/src/main/java/at/ac/univie/se2ws2020team0310/sketch_app/model/Sketch.java	(date 1609237653095)
-@@ -13,6 +13,7 @@
- // Attributes
- 
-     private static final Sketch sketch = new Sketch();
-+
-     private final Layer[] layers;
-     private Layer selectedLayer;
- 
-@@ -56,7 +57,7 @@
-     }
- 
-     public List<GraphicalElement> getDrawnElements() {
--        List<GraphicalElement> visibleElements = new ArrayList<>();
-+        List<GraphicalElement> visibleElements = new ArrayList<>(); // TODO: Iterator kann hier helfen
-         for (Layer layer : layers) {
-             if (layer.isVisible()) {
-                 visibleElements.addAll(layer.getDrawnElements());
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_29_12_2020_11_27__Default_Changelist_.xml
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Checkout_at_29_12_2020_11_27__Default_Changelist_.xml	(revision 672a4974ca70ebf45c0fe403e55d6bd316209263)
+++ .idea/shelf/Uncommitted_changes_before_Checkout_at_29_12_2020_11_27__Default_Changelist_.xml	(revision 672a4974ca70ebf45c0fe403e55d6bd316209263)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Checkout_at_29_12_2020_11_27_[Default_Changelist]" date="1609237653111" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Checkout_at_29_12_2020_11_27_[Default_Changelist]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Checkout at 29.12.2020 11:27 [Default Changelist]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Merge_at_29_12_2020_11_27__Default_Changelist_.xml
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Merge_at_29_12_2020_11_27__Default_Changelist_.xml	(revision 672a4974ca70ebf45c0fe403e55d6bd316209263)
+++ .idea/shelf/Uncommitted_changes_before_Merge_at_29_12_2020_11_27__Default_Changelist_.xml	(revision 672a4974ca70ebf45c0fe403e55d6bd316209263)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Merge_at_29_12_2020_11_27_[Default_Changelist]" date="1609237667019" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Merge_at_29_12_2020_11_27_[Default_Changelist]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Merge at 29.12.2020 11:27 [Default Changelist]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Checkout_at_29_12_2020_11_27_[Default_Changelist]/shelved.patch
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Checkout_at_29_12_2020_11_27_[Default_Changelist]/shelved.patch	(revision 672a4974ca70ebf45c0fe403e55d6bd316209263)
+++ .idea/shelf/Uncommitted_changes_before_Checkout_at_29_12_2020_11_27_[Default_Changelist]/shelved.patch	(revision 672a4974ca70ebf45c0fe403e55d6bd316209263)
@@ -1,43 +0,0 @@
-Index: app/src/main/java/at/ac/univie/se2ws2020team0310/sketch_app/model/graphicalElements/Line.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package at.ac.univie.se2ws2020team0310.sketch_app.model.graphicalElements;\r\n\r\nimport at.ac.univie.se2ws2020team0310.sketch_app.model.draw.DrawStrategy;\r\n\r\npublic class Line extends GraphicalElement {\r\n\r\n// Attributes\r\n    private float startX, startY;\r\n\r\n    public Line(DrawStrategy drawStrategy) {\r\n        super(drawStrategy);\r\n    }\r\n\r\n// Getters and Setters\r\n    public float getStartX() {\r\n        return startX;\r\n    }\r\n\r\n    public float getStartY() {\r\n        return startY;\r\n    }\r\n\r\n    public void setStartCoordinates(float x, float y) {\r\n        this.startX = x;\r\n        this.startY = y;\r\n    }\r\n// Polymorphism with setter of Superclass\r\n    // if the startpoint is not defined, set position as startpoint\r\n    // else set position as endpoint\r\n    @Override\r\n    public void setCoordinates(float x, float y) {\r\n        if (getStartX() == 0 & getStartY() == 0) {\r\n            setStartCoordinates(x, y);\r\n        } else {\r\n            super.setCoordinates(x, y);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void changeCoordinates(float x, float y) {\r\n\r\n    }\r\n\r\n    public boolean isWithinElement(float x, float y) {\r\n        // TODO: implement method body\r\n        return false;\r\n    }\r\n\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/at/ac/univie/se2ws2020team0310/sketch_app/model/graphicalElements/Line.java	(revision 92da555c1d094febdcc694600e9a799482c102f2)
-+++ app/src/main/java/at/ac/univie/se2ws2020team0310/sketch_app/model/graphicalElements/Line.java	(date 1609233907402)
-@@ -42,6 +42,7 @@
-     }
- 
-     public boolean isWithinElement(float x, float y) {
-+
-         // TODO: implement method body
-         return false;
-     }
-Index: app/src/main/java/at/ac/univie/se2ws2020team0310/sketch_app/model/Sketch.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package at.ac.univie.se2ws2020team0310.sketch_app.model;\r\n\r\nimport android.util.Log;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\nimport at.ac.univie.se2ws2020team0310.sketch_app.model.graphicalElements.EGraphicalElementType;\r\nimport at.ac.univie.se2ws2020team0310.sketch_app.model.graphicalElements.GraphicalElement;\r\n\r\npublic class Sketch {\r\n\r\n// Attributes\r\n\r\n    private static final Sketch sketch = new Sketch();\r\n    private final Layer[] layers;\r\n    private Layer selectedLayer;\r\n\r\n    private GraphicalElement selectedGraphicalElement;\r\n\r\n// Constructor\r\n\r\n    private Sketch() {\r\n        this.layers = new Layer[3];\r\n        for (int i = 0; i < 3; i++) {\r\n            layers[i] = new Layer();\r\n        }\r\n        this.selectedLayer = layers[0];\r\n    }\r\n\r\n// Getters and Setters\r\n\r\n    public static Sketch getSketch() {\r\n        return sketch;\r\n    }\r\n\r\n    public Layer getSelectedLayer() {\r\n        return this.selectedLayer;\r\n    }\r\n\r\n    public void setSelectedLayer(int layerNumber) {\r\n        try {\r\n            this.selectedLayer = layers[layerNumber];\r\n        }\r\n        catch (ArrayIndexOutOfBoundsException e) {\r\n            Log.e(\"Sketch\", e.getMessage());\r\n        }\r\n    }\r\n\r\n    public GraphicalElement getSelectedGraphicalElement() {\r\n        return selectedGraphicalElement;\r\n    }\r\n\r\n    public void setSelectedGraphicalElement(GraphicalElement selectedGraphicalElement) {\r\n        this.selectedGraphicalElement = selectedGraphicalElement;\r\n    }\r\n\r\n    public List<GraphicalElement> getDrawnElements() {\r\n        List<GraphicalElement> visibleElements = new ArrayList<>();\r\n        for (Layer layer : layers) {\r\n            if (layer.isVisible()) {\r\n                visibleElements.addAll(layer.getDrawnElements());\r\n            }\r\n        }\r\n        return  visibleElements;\r\n    }\r\n\r\n// Other Methods\r\n\r\n    public boolean layerIsEmpty() {\r\n        return selectedLayer.isEmpty();\r\n    }\r\n\r\n    public void storeElement() {\r\n        this.getSelectedLayer().storeElement(this.getSelectedGraphicalElement());\r\n    }\r\n\r\n    public void changeColor(int color) {\r\n        this.getSelectedLayer().changeColor(color);\r\n    }\r\n\r\n    public void changeStrokeWidth(float strokewidth) {\r\n        this.getSelectedLayer().changeStrokeWidth(strokewidth);\r\n    }\r\n\r\n    public void changeSize(int size) {\r\n        this.getSelectedLayer().changeSize(size);\r\n    }\r\n\r\n    public void setCoordinates(float x, float y) {\r\n        this.getSelectedLayer().setCoordinates(x, y);\r\n    }\r\n\r\n    public void changeCoordinates(float x, float y) {\r\n        this.getSelectedLayer().changeCoordinates(x, y);\r\n    }\r\n\r\n    public void deleteElement() {\r\n        selectedLayer.deleteLastElement();\r\n    }\r\n\r\n    public void clear() {\r\n        for (Layer layer : layers) {\r\n            layer.clear();\r\n        }\r\n    }\r\n\r\n    public void resetSelection() {\r\n        this.setSelectedGraphicalElement(null);\r\n    }\r\n\r\n    /**\r\n     * Checks, whether the provided coordinates are within a graphical element of the selected layer and if so, makes that element editable.\r\n     *\r\n     * @param x value on the x-axes\r\n     * @param y value on the y-axes\r\n     * @return returns true if the provided coordinates are within an element\r\n     */\r\n    public boolean isWithinElement(float x, float y) {\r\n        // TODO: We need a better name, as this method not only checks, whether a touch falls within an element, but also sets the found element \"editable\"\r\n        for (GraphicalElement graphicalElement : selectedLayer.getDrawnElements()) {\r\n               if (graphicalElement.isWithinElement(x, y)) {\r\n                    selectedLayer.editElement(graphicalElement);\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n\r\n    public void selectGraphicalElement(EGraphicalElementType type, int color, float size, float strokeWidth) {\r\n        try {\r\n            this.setSelectedGraphicalElement(GraphicalElementFactory.createElement(type, color, size, strokeWidth));\r\n        } catch (AppException e) {\r\n            Log.e(\"CanvasView\", e.getMessage());\r\n        }\r\n    }\r\n}\r\n\r\n\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/at/ac/univie/se2ws2020team0310/sketch_app/model/Sketch.java	(revision 92da555c1d094febdcc694600e9a799482c102f2)
-+++ app/src/main/java/at/ac/univie/se2ws2020team0310/sketch_app/model/Sketch.java	(date 1609236046974)
-@@ -13,6 +13,7 @@
- // Attributes
- 
-     private static final Sketch sketch = new Sketch();
-+
-     private final Layer[] layers;
-     private Layer selectedLayer;
- 
-@@ -56,7 +57,7 @@
-     }
- 
-     public List<GraphicalElement> getDrawnElements() {
--        List<GraphicalElement> visibleElements = new ArrayList<>();
-+        List<GraphicalElement> visibleElements = new ArrayList<>(); // TODO: Iterator kann hier helfen
-         for (Layer layer : layers) {
-             if (layer.isVisible()) {
-                 visibleElements.addAll(layer.getDrawnElements());
Index: .idea/shelf/Uncommitted_changes_before_Update_at_28_12_2020_22_36__Default_Changelist_.xml
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_28_12_2020_22_36__Default_Changelist_.xml	(revision 672a4974ca70ebf45c0fe403e55d6bd316209263)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_28_12_2020_22_36__Default_Changelist_.xml	(revision 672a4974ca70ebf45c0fe403e55d6bd316209263)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_28_12_2020_22_36_[Default_Changelist]" date="1609191390445" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_28_12_2020_22_36_[Default_Changelist]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 28.12.2020 22:36 [Default Changelist]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_28_12_2020_22_36_[Default_Changelist]/shelved.patch
===================================================================
--- .idea/shelf/Uncommitted_changes_before_Update_at_28_12_2020_22_36_[Default_Changelist]/shelved.patch	(revision 672a4974ca70ebf45c0fe403e55d6bd316209263)
+++ .idea/shelf/Uncommitted_changes_before_Update_at_28_12_2020_22_36_[Default_Changelist]/shelved.patch	(revision 672a4974ca70ebf45c0fe403e55d6bd316209263)
@@ -1,33 +0,0 @@
-Index: app/src/main/java/at/ac/univie/se2ws2020team0310/sketch_app/model/graphicalElements/Text.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package at.ac.univie.se2ws2020team0310.sketch_app.model.graphicalElements;\r\n\r\nimport at.ac.univie.se2ws2020team0310.sketch_app.model.draw.DrawStrategy;\r\n\r\npublic class Text extends GraphicalElement {\r\n\r\n// Attributes\r\n\r\n    private String userText;\r\n\r\n// Constructor\r\n\r\n    public Text(DrawStrategy drawStrategy) {\r\n        super(drawStrategy);\r\n        userText = \"\";\r\n    }\r\n\r\n// Getters and Setters\r\n\r\n    public String getUserText() {\r\n        return userText;\r\n    }\r\n\r\n    public void setUserText(String userText) {\r\n        this.userText = userText;\r\n    }\r\n\r\n    @Override\r\n    public void setSize(float size) {\r\n        super.setSize(size);\r\n        setTextSize(size);\r\n    }\r\n\r\n// Other Methods\r\n\r\n    public void setTextSize(float textSize) {\r\n        getObjectPaint().setTextSize(textSize);\r\n    }\r\n\r\n    public boolean isWithinElement(float x, float y) {\r\n        // TODO: implement method body\r\n        return false;\r\n    }\r\n\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/at/ac/univie/se2ws2020team0310/sketch_app/model/graphicalElements/Text.java	(revision bd8ae83e49ad7cb88372e0469014d083b529d25a)
-+++ app/src/main/java/at/ac/univie/se2ws2020team0310/sketch_app/model/graphicalElements/Text.java	(date 1609181040990)
-@@ -41,5 +41,5 @@
-         // TODO: implement method body
-         return false;
-     }
--
-+    
- }
-Index: app/src/main/java/at/ac/univie/se2ws2020team0310/sketch_app/model/graphicalElements/GraphicalElement.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package at.ac.univie.se2ws2020team0310.sketch_app.model.graphicalElements;\r\n\r\nimport android.graphics.Canvas;\r\nimport android.graphics.Paint;\r\n\r\nimport at.ac.univie.se2ws2020team0310.sketch_app.model.draw.DrawStrategy;\r\n\r\npublic abstract class GraphicalElement {\r\n\r\n// Attributes\r\n\r\n    private final DrawStrategy drawStrategy;\r\n\r\n    protected float xPosition, yPosition, size;\r\n\r\n    protected Paint objectPaint;\r\n\r\n// Constructor\r\n\r\n    public GraphicalElement(DrawStrategy drawStrategy) { //Konstruktor\r\n        this.drawStrategy = drawStrategy;\r\n    }\r\n\r\n// Getters and Setters\r\n\r\n    public void setCoordinates(float x, float y) {\r\n        this.xPosition = x;\r\n        this.yPosition = y;\r\n    }\r\n\r\n    public float getxPosition() {\r\n        return xPosition;\r\n    }\r\n\r\n    public void setxPosition(float xPosition) {\r\n        this.xPosition = xPosition;\r\n    }\r\n\r\n    public float getyPosition() {\r\n        return yPosition;\r\n    }\r\n\r\n    public void setyPosition(float yPosition) {\r\n        this.yPosition = yPosition;\r\n    }\r\n\r\n    public float getSize() {\r\n        return size;\r\n    }\r\n\r\n    public void setSize(float size) {\r\n        this.size = size;\r\n    }\r\n\r\n    public Paint getObjectPaint() {\r\n        return objectPaint;\r\n    }\r\n\r\n    public void setObjectPaint(Paint objectPaint) {\r\n        this.objectPaint = objectPaint;\r\n    }\r\n\r\n    public void draw(Canvas canvas) {\r\n        drawStrategy.draw(canvas, this);\r\n    }\r\n\r\n// Other Methods\r\n\r\n    public void changeCoordinates(float x, float y) {\r\n        this.setCoordinates(x, y);\r\n    }\r\n    public void setColor(int color) {\r\n        getObjectPaint().setColor(color);\r\n    }\r\n\r\n    public void setStrokeWidth(float strokeWidth) {\r\n        getObjectPaint().setStrokeWidth(strokeWidth);\r\n    }\r\n\r\n    public abstract boolean isWithinElement(float x, float y);\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
---- app/src/main/java/at/ac/univie/se2ws2020team0310/sketch_app/model/graphicalElements/GraphicalElement.java	(revision bd8ae83e49ad7cb88372e0469014d083b529d25a)
-+++ app/src/main/java/at/ac/univie/se2ws2020team0310/sketch_app/model/graphicalElements/GraphicalElement.java	(date 1609180946663)
-@@ -69,6 +69,7 @@
-     public void changeCoordinates(float x, float y) {
-         this.setCoordinates(x, y);
-     }
-+
-     public void setColor(int color) {
-         getObjectPaint().setColor(color);
-     }
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_22_12_2020_22_14__Default_Changelist_1.xml .idea/shelf/Uncommitted_changes_before_Update_at_22_12_2020_22_14__Default_Changelist_1.xml
diff --git .idea/shelf/Uncommitted_changes_before_Update_at_22_12_2020_22_14__Default_Changelist_.xml .idea/shelf/Uncommitted_changes_before_Update_at_22_12_2020_22_14__Default_Changelist_.xml
